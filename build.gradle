buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		// spring
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE')
		classpath('org.springframework:springloaded:1.2.6.RELEASE')
	}
}

plugins {
	id "com.moowork.node" version "0.12"
	id "com.moowork.gulp" version "0.12"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

repositories {
	mavenCentral()
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers('org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8')
	}
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("${buildDir}/classes/main/")
    }
}

jar {
	baseName = 'springboot-angular2-quickstart'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	dev
}

dependencies {
	// spring
	compile('org.springframework.boot:spring-boot-starter-web')

	// testing
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

def generatedWebResources = "${buildDir}/generated-web-resources"

sourceSets {
	main {
		output.dir(generatedWebResources, builtBy: 'gulp_build')
	}
}

// encoding
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// configure gradle-node-plugin
node {
	version = '6.3.0'
	npmVersion = '3.10.5'
	download = true
	workDir = file("${project.projectDir}/src/main/webapp/node")
	nodeModulesDir = file("${project.projectDir}/src/main/webapp")
}

// configure gradle-grunt-plugin
gulp {
	workDir = file("${project.projectDir}/src/main/webapp");
	colors = true
	bufferOutput = false
}

// watch ts, sass, html files for changes and build
task gulpWatch(type: GulpTask) {
    args = ['watch']
}

// gradle wrapper
task wrapper(type: Wrapper) {
	gradleVersion = '3.0'
}

// clean node/node_modules/typings
task npmClean(type: Delete) {
	final def webDir = "${rootDir}/src/main/webapp"
	delete "${webDir}/node"
	delete "${webDir}/node_modules"
	delete "${webDir}/typings"
}

// run spring boot app
bootRun {
	addResources = true
	classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

// ensure resources are processed before code is compiled
compileJava.dependsOn(processResources);
// build front-end before making jar
processResources.dependsOn(npmInstall)
npmInstall.finalizedBy(gulp_build)

// run npmClean before clean
clean.dependsOn(npmClean)
